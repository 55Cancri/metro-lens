root: true

parser: '@typescript-eslint/parser'

parserOptions:
  sourceType: module
  project: ./tsconfig.json
  ecmaVersion: 2020
  ecmaFeatures:
    jsx: true

# settings:
#   import/parsers:
#     '@typescript-eslint/parser': [.ts, .tsx]
#   import/resolver:
#     typescript: {}

extends:
  - react-app
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint
  - plugin:react/recommended
  - plugin:jest/recommended
  - airbnb
  - prettier
  - prettier/react

plugins:
  - '@typescript-eslint'
  - import
  - react
  - jest
  - prettier

rules:
  # no semi-colons
  semi: 0
  # handled by typescript
  no-unused-vars: 0
  # error on unused vars (except React!)
  '@typescript-eslint/no-unused-vars': [warn, { varsIgnorePattern: 'React' }]
  '@typescript-eslint/quotes': [error, single]
  # no semi-colons
  '@typescript-eslint/semi': off
  # no semi-colons for types too
  '@typescript-eslint/member-delimiter-style': off
  # some api parameters
  '@typescript-eslint/camelcase': [off]
  '@typescript-eslint/explicit-function-return-type': 'off'
  '@typescript-eslint/ban-ts-ignore': 'off'
  # allow jsx in .tsx file
  'react/jsx-filename-extension':
    ['error', { 'extensions': [.js, .jsx, .ts, .tsx] }]
  # conflicts with prettier
  react/jsx-one-expression-per-line: off
  # allow console.log and console.error
  no-console: 0
  # allow arrow function on new line, not always beside
  implicit-arrow-linebreak: 0
  # allow closing parenthesis on new line
  function-paren-newline: 0
  # conflicts with prettier
  object-curly-newline: 0
  # conflicts with prettier
  comma-dangle: 0
  import/newline-after-import: 0
  'import/extensions':
    [error, ignorePackages, { js: never, jsx: never, ts: never, tsx: never }]
  import/prefer-default-export: 0
